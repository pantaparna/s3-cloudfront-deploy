name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        # No 'Build Artifacts' step needed, as the build/ folder is already in the repo.

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2  # Ensure this is your correct AWS region.

      - name: Verify AWS Credentials (Optional Debugging)
        run: aws sts get-caller-identity

      - name: Upload Files to S3
        run: aws s3 cp build/ s3://aparna-github-actions-test-bucket/deployments/ --recursive
        # IMPORTANT:  Double-check that 'build/' is the correct path *within your repository*
        #             to the files you want to upload.

      - name: Invalidate CloudFront Cache
        run: |
          INVALIDATION_BATCH=$(jq -n \
            --arg paths '/deployments/index.html' \
            --arg callerRef "$(date +%s)" \
            '{Paths: {Quantity: 1, Items: [$paths]}, CallerReference: $callerRef}' \
          )
          aws cloudfront create-invalidation \
            --distribution-id "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --invalidation-batch "$INVALIDATION_BATCH"
        continue-on-error: true

      - name: Check CloudFront Invalidation and Notify on Failure
        if: failure()  # Runs if the *previous* step (invalidation) failed.
        run: |
          echo "CloudFront invalidation failed!"
          echo "::warning:: CloudFront invalidation failed. Check workflow logs."
          #  Replace with a more robust notification (e.g., Slack, email).
